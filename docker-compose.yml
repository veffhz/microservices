version: '3.3'

services:

  mongo:
    image: mongo:${MONGO_IMAGE_VER}
    deploy:
      placement:
        constraints:
          - node.labels.reliability == high
    volumes:
      - post_db:/data/db
    networks:
      back_net:
        aliases:
          - post_db
          - comment_db

  ui:
    image: ${USER_NAME}/ui:${UI_APP_IMAGE_VER}
    environment:
      - ENV=DEV
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 3
      resources:
        limits:
          cpus: '0.25'
          memory: 150M
      update_config:
        delay: 5s
        failure_action: rollback
        parallelism: 1
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    ports:
      - ${PORT_PUMA}:9292/tcp
    networks:
      - front_net

  post:
    image: ${USER_NAME}/post:${POST_APP_IMAGE_VER}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
      update_config:
        delay: 10s
        failure_action: rollback
        parallelism: 2
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    networks:
      - front_net
      - back_net

  comment:
    image: ${USER_NAME}/comment:${COMMENT_APP_IMAGE_VER}
    deploy:
      restart_policy:
        condition: on-failure
        delay: 1s
        max_attempts: 10
      resources:
        limits:
          cpus: '0.3'
          memory: 300M
      update_config:
        delay: 10s
        failure_action: rollback
        parallelism: 2
      mode: replicated
      replicas: 3
      placement:
        constraints:
          - node.role == worker
    networks:
      - front_net
      - back_net


volumes:
  post_db:

networks:
  back_net:
  front_net:
